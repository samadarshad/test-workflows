name: Example CI Workflow

# Trigger the workflow on push and pull request events
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Define the jobs to run
jobs:
  # Job 1: Basic checks and testing
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Display environment info
      run: |
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Current directory: $(pwd)"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref_name }}"
        
    - name: List repository contents
      run: |
        echo "Repository contents:"
        ls -la
        
    - name: Run basic shell commands
      run: |
        echo "Running basic tests and checks..."
        # Example of running tests (would work if package.json existed)
        # npm install
        # npm test
        echo "âœ… All checks passed!"

  # Job 2: Build and deploy (example)
  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: test  # This job depends on the test job completing successfully
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create build artifact
      run: |
        echo "Building project..."
        mkdir -p build
        echo "Build completed at $(date)" > build/build-info.txt
        echo "Repository: ${{ github.repository }}" >> build/build-info.txt
        echo "Commit SHA: ${{ github.sha }}" >> build/build-info.txt
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: build/
        retention-days: 30

  # Job 3: Multiple OS testing
  multi-os-test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: OS-specific commands
      shell: bash
      run: |
        echo "Running on: ${{ matrix.os }}"
        echo "Runner OS: ${{ runner.os }}"
        if [[ "${{ runner.os }}" == "Linux" ]]; then
          echo "This is a Linux system"
          uname -a
        elif [[ "${{ runner.os }}" == "Windows" ]]; then
          echo "This is a Windows system"
          systeminfo | head -10
        elif [[ "${{ runner.os }}" == "macOS" ]]; then
          echo "This is a macOS system"
          sw_vers
        fi